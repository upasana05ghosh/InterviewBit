Maximum Unsorted Subarray

You are given an array (zero indexed) of N non-negative integers, A0, A1 ,…, AN-1.
Find the minimum sub array Al, Al+1 ,…, Ar so if we sort(in ascending order) that sub array, then the whole array should get sorted.
If A is already sorted, output -1.

Example :

Input 1:

A = [1, 3, 2, 4, 5]

Return: [1, 2]

******************************************************************************
Java Solution
******************************************************************************

    public int[] subUnsort(int[] A) {
        int n = A.length;
        int f = -1, s = -1;
        
        int [] temp = A.clone();
        Arrays.sort(temp);
        
        for(int i = 0; i< n; i++) {
            if (A[i] != temp[i]) {
                if (f == -1) 
                    f = i;
                else 
                    s = Math.max(s, i);
            }
        }
        
        if (f == -1)
            return new int[] {f};
        else
            return new int[] {f, s};
    }