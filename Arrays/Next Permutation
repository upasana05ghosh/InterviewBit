Next Permutation

Implement the next permutation, which rearranges numbers into the numerically next greater permutation of numbers for a given array A of size N.
If such arrangement is not possible, it must be rearranged as the lowest possible order i.e., sorted in an ascending order.

Input Format:
The first and the only argument of input has an array of integers, A.

Output Format:
Return an array of integers, representing the next permutation of the given array.

Examples:

Input 1:
    A = [1, 2, 3]

Output 1:
    [1, 3, 2]

Input 2:
    A = [3, 2, 1]

Output 2:
    [1, 2, 3]

Input 3:
    A = [1, 1, 5]

Output 3:
    [1, 5, 1]


******************************************************************************
Java Solution
******************************************************************************

    public int[] nextPermutation(int[] a) {
        int n = a.length;
        if (n < 2)
            return a; 
        int i;
        for(i = n-2; i >= 0 ; i--) {
            if (a[i] < a[i+1])
                break;
        }
        
		//if decreasing
        if (i < 0) {
            reverse(a, 0, n);
            return a;
        }
		
        //find next largest from right
        int j = n -1;
        while(a[j] <= a[i]) 
            j--;
        
        swap(a, i, j);
        reverse(a, i+1 , n);
        return a;
        
    }
    
    private void reverse(int [] a, int start, int end) {
        int i = start, j = end-1;
        while(i <= j) {
            swap(a, i, j);
            i++;
            j--;
        }
    }
    
    private void swap(int [] a, int i, int j) {
        int temp = a[i];
        a[i] = a[j];
        a[j] = temp;
    }