Pascal Triangle

Given numRows, generate the first numRows of Pascal’s triangle.
Pascal’s triangle : To generate A[C] in row R, sum up A’[C] and A’[C-1] from previous row R - 1.

Example:

Given numRows = 5,

Return

[
     [1],
     [1,1],
     [1,2,1],
     [1,3,3,1],
     [1,4,6,4,1]
]

******************************************************************************
Java Solution
******************************************************************************

    public int[][] solve(int n) { 
        List<List<Integer>> res = new ArrayList<>();
        res.add(new ArrayList<>(Arrays.asList(1)));
        
        if (n < 2)
            return convert(res, n);
        
        res.add(new ArrayList<>(Arrays.asList(1, 1)));
        
        int k;
        for(int i = 2; i< n; i++) {
            List<Integer> temp = new ArrayList<>();
            temp.add(1);
            List<Integer> prev = res.get(i-1);
            for(int j = 0 ; j < prev.size() -1; j++) {
                temp.add(prev.get(j) + prev.get(j+1));
            }
            temp.add(1);
            res.add(temp);
        }
        return convert(res, n);
    }
    
    private int [][] convert(List<List<Integer>> res, int n ){
        int [][] r = new int[n][];
        int i = 0;
        for(List<Integer> list : res) {
            r[i] = new int [list.size()];
            for(int j = 0; j< list.size(); j++)
                r[i][j] = list.get(j);
            i++;
        }
        return r;
    }